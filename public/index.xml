<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🪴 Beoks Blog</title>
      <link>https://quartz.jzhao.xyz</link>
      <description>최근 10 건 on 🪴 Beoks Blog</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>코루틴 동작 방식 (하드웨어 및 OS 레벨)</title>
    <link>https://quartz.jzhao.xyz/%EC%BD%94%EB%A3%A8%ED%8B%B4-%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D-(%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EB%B0%8F-OS-%EB%A0%88%EB%B2%A8)</link>
    <guid>https://quartz.jzhao.xyz/%EC%BD%94%EB%A3%A8%ED%8B%B4-%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D-(%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EB%B0%8F-OS-%EB%A0%88%EB%B2%A8)</guid>
    <description>코루틴 동작 방식 (하드웨어 및 OS 레벨) 코루틴은 비동기 프로그래밍을 위한 강력한 추상화이지만, 그 내부 동작은 운영체제(OS) 스레드와 하드웨어의 상호작용 방식과는 다소 차이가 있습니다. 코루틴이 ‘경량 스레드’라고 불리는 이유와 그 효율성의 근원을 이해하기 위해서는 OS 및 하드웨어 레벨에서의 동작 방식을 살펴보는 것이 중요합니다.</description>
    <pubDate>Thu, 03 Jul 2025 02:44:46 GMT</pubDate>
  </item><item>
    <title>코루틴 (Coroutines)</title>
    <link>https://quartz.jzhao.xyz/%EC%BD%94%EB%A3%A8%ED%8B%B4-(Coroutines)</link>
    <guid>https://quartz.jzhao.xyz/%EC%BD%94%EB%A3%A8%ED%8B%B4-(Coroutines)</guid>
    <description>코루틴(Coroutine)은 비동기 프로그래밍을 위한 경량 스레드(lightweight thread)입니다. 스레드와 유사하게 동시성(Concurrency)을 제공하지만, 운영체제가 아닌 사용자 레벨에서 스케줄링되어 스레드보다 훨씬 적은 자원을 사용하고 오버헤드가 적습니다.</description>
    <pubDate>Thu, 03 Jul 2025 02:30:38 GMT</pubDate>
  </item><item>
    <title>동시성(Concurrency)</title>
    <link>https://quartz.jzhao.xyz/%EB%8F%99%EC%8B%9C%EC%84%B1(Concurrency)</link>
    <guid>https://quartz.jzhao.xyz/%EB%8F%99%EC%8B%9C%EC%84%B1(Concurrency)</guid>
    <description>소프트웨어 개발에서 동시성(Concurrency)의 개념과 구현 방법, 그리고 관련 패턴에 대한 포괄적인 설명.</description>
    <pubDate>Thu, 03 Jul 2025 02:17:19 GMT</pubDate>
  </item><item>
    <title>스레드(Thread)</title>
    <link>https://quartz.jzhao.xyz/%EC%8A%A4%EB%A0%88%EB%93%9C(Thread)</link>
    <guid>https://quartz.jzhao.xyz/%EC%8A%A4%EB%A0%88%EB%93%9C(Thread)</guid>
    <description>스레드(Thread)는 프로세스 내에서 실행되는 작업의 가장 작은 단위입니다. 하나의 프로세스는 여러 개의 스레드를 가질 수 있으며, 각 스레드는 동일한 프로세스 내의 자원을 공유하면서 독립적으로 실행됩니다. 이것이 바로 스레드가 ‘경량 프로세스’라고 불리는 이유입니다. 스레드는 현대 소프트웨어 개발에서 매우 중요한 개념으로, 멀티스레딩 기법을 통해 애플리케이션의 성능과 응답성을 크게 향상시킬 수 있습니다.</description>
    <pubDate>Thu, 03 Jul 2025 02:17:08 GMT</pubDate>
  </item><item>
    <title>비동기(Asynchronous)</title>
    <link>https://quartz.jzhao.xyz/%EB%B9%84%EB%8F%99%EA%B8%B0(Asynchronous)</link>
    <guid>https://quartz.jzhao.xyz/%EB%B9%84%EB%8F%99%EA%B8%B0(Asynchronous)</guid>
    <description>비동기(Asynchronous)는 프로그래밍에서 코드의 실행이 순차적으로 진행되지 않고, 작업이 완료되기를 기다리지 않고 다음 작업을 계속 진행하는 방식을 의미합니다. 이 방식에서는 작업이 완료되면 콜백, 이벤트, 약속(Promise) 등의 메커니즘을 통해 결과를 처리합니다.</description>
    <pubDate>Thu, 03 Jul 2025 02:17:00 GMT</pubDate>
  </item><item>
    <title>Kotlin</title>
    <link>https://quartz.jzhao.xyz/Kotlin</link>
    <guid>https://quartz.jzhao.xyz/Kotlin</guid>
    <description>Kotlin: 현대적인 개발을 위한 실용적인 언어 Kotlin은 JetBrains에서 개발한 정적 타입 프로그래밍 언어로, JVM(Java Virtual Machine)에서 실행됩니다. 간결하고 안전하며 Java와의 완벽한 상호 운용성을 제공하여, 안드로이드 앱 개발부터 서버 사이드, 웹 프론트엔드, 심지어 멀티플랫폼 개발까지 다양한 분야에서 빠르게 채택되고 있습니다.</description>
    <pubDate>Thu, 03 Jul 2025 02:16:43 GMT</pubDate>
  </item><item>
    <title>개발 계획서, 언제 어떻게 작성해야 할까?</title>
    <link>https://quartz.jzhao.xyz/%EA%B0%9C%EB%B0%9C-%EA%B3%84%ED%9A%8D%EC%84%9C-%EC%9E%91%EC%84%B1-%EA%B0%80%EC%9D%B4%EB%93%9C</link>
    <guid>https://quartz.jzhao.xyz/%EA%B0%9C%EB%B0%9C-%EA%B3%84%ED%9A%8D%EC%84%9C-%EC%9E%91%EC%84%B1-%EA%B0%80%EC%9D%B4%EB%93%9C</guid>
    <description>많은 개발자들이 “일단 코딩부터 시작하자”는 유혹에 빠지곤 합니다. 특히 빠르게 변화하는 스타트업이나 애자일 환경에서는 문서 작업이 불필요한 시간 낭비처럼 느껴질 수 있습니다. 하지만 잘 작성된 개발 계획서는 단순한 서류 작업을 넘어, 프로젝트를 성공으로 이끄는 나침반 역할을 합니다.</description>
    <pubDate>Thu, 03 Jul 2025 00:00:00 GMT</pubDate>
  </item><item>
    <title>모범적인 개발 계획서 예시: 쇼핑몰 리뷰 기능 개발</title>
    <link>https://quartz.jzhao.xyz/%EB%AA%A8%EB%B2%94%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%B0%9C-%EA%B3%84%ED%9A%8D%EC%84%9C-%EC%98%88%EC%8B%9C</link>
    <guid>https://quartz.jzhao.xyz/%EB%AA%A8%EB%B2%94%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%B0%9C-%EA%B3%84%ED%9A%8D%EC%84%9C-%EC%98%88%EC%8B%9C</guid>
    <description>이 문서는 개발 계획서 작성 가이드에서 설명하는 원칙에 따라 작성된 “쇼핑몰 리뷰 기능 개발” 프로젝트의 구체적인 개발 계획서 예시입니다. 이러한 계획서의 초안을 효율적으로 작성하고 싶다면, LLM을 활용한 효과적인 개발 계획서 작성법 문서도 함께 참고해 보세요. 1. 프로젝트 개요 프로젝트명: 쇼핑몰 리뷰 기능 개발 담당팀: 이커머스 개발팀 프로젝트 기간: 2025년 8월 4일 ~ 2025년 8월 29일 (4주) 프로젝트 총괄: 최기획 PM 2.</description>
    <pubDate>Thu, 03 Jul 2025 00:00:00 GMT</pubDate>
  </item><item>
    <title>LLM을 활용한 효과적인 개발 계획서 작성법</title>
    <link>https://quartz.jzhao.xyz/LLM%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%B0%9C-%EA%B3%84%ED%9A%8D%EC%84%9C-%EC%9E%91%EC%84%B1%EB%B2%95</link>
    <guid>https://quartz.jzhao.xyz/LLM%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%B0%9C-%EA%B3%84%ED%9A%8D%EC%84%9C-%EC%9E%91%EC%84%B1%EB%B2%95</guid>
    <description>최근 GPT-4, Gemini와 같은 대규모 언어 모델(LLM)이 개발 워크플로우에 빠르게 통합되고 있습니다. 아이디어 구상부터 코드 작성, 테스트에 이르기까지 LLM은 이제 강력한 개발 보조 도구로 자리 잡았습니다. 그렇다면 복잡하고 시간이 많이 소요되는 ‘개발 계획서’ 작성에도 LLM을 효과적으로 활용할 수 있지 않을까요? 이 글에서는 LLM을 활용하여 개발 계획서의 초안을 만들고, 내용을 구체화하는 실용적인 방법과 주의사항에 대해 알아봅니다.</description>
    <pubDate>Thu, 03 Jul 2025 00:00:00 GMT</pubDate>
  </item><item>
    <title>AI 시대, 벡엔드 개발자의 생존과 진화</title>
    <link>https://quartz.jzhao.xyz/AI-%EC%8B%9C%EB%8C%80,-%EB%B2%A1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EC%83%9D%EC%A1%B4%EA%B3%BC-%EC%A7%84%ED%99%94</link>
    <guid>https://quartz.jzhao.xyz/AI-%EC%8B%9C%EB%8C%80,-%EB%B2%A1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EC%83%9D%EC%A1%B4%EA%B3%BC-%EC%A7%84%ED%99%94</guid>
    <description>서론: 코드의 종말이 아닌, 역할의 위대한 진화 인공지능(AI) 기술이 소프트웨어 개발 생태계 전반에 걸쳐 지각 변동을 일으키고 있다. 과거의 AI가 특정 영역의 작업을 보조하는 도구에 머물렀다면, 오늘날의 생성형 AI는 코드 작성, 디버깅, 테스트, 배포에 이르는 개발의 전 과정을 재정의하는 근본적인 패러다임 전환을 촉발하고 있다.1 이러한 변화는 단순히 새로운 기술의 등장을 넘어, 백엔드 개발자의 본질적인 가치와 역할에 대한 근본적인 질문을 제기한다.</description>
    <pubDate>Wed, 02 Jul 2025 00:45:09 GMT</pubDate>
  </item>
    </channel>
  </rss>